package com.zebra.box.controller.demo;

import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.zebra.box.db.model.demo.User;
import com.zebra.box.db.model.demo.UserDetail;
import com.zebra.box.db.service.demo.UserService;
import com.zebra.box.prop.env.modelprop.CoreConfigProp;

@Controller
@RequestMapping(value = "/user/")
public class DemoController {
	private static Logger logger = LoggerFactory
			.getLogger(DemoController.class);
	@Autowired
	private UserService userService;
	@Autowired
	private CoreConfigProp coreConfigProp;

	@RequestMapping(value = "findUsers")
	public ModelAndView queryItemList(HttpServletRequest request,
			HttpServletResponse response, String userName, String password,
			User user) throws Exception {
		logger.info("hello this is zebra's portal framework!");
		logger.info("propertis 文件值" + coreConfigProp.getCorePath() + "--------"
				+ coreConfigProp.getRootName());
		ModelAndView mv = new ModelAndView();
		List<User> userList = userService.finUserList();
		mv.addObject("userList", userList);
		mv.setViewName("userList");
		return mv;
	}

	@RequestMapping(value = "addUser")
	public void addUser() {
		User user = new User();
		user.setAcccount("yang002");
		user.setPassWord("123456");
		user.setMobile("15504265998");
		user.setName("鏉ㄤ腑濂�");
		UserDetail userDetail = new UserDetail();
		userDetail.setAddress("杈藉畞-澶ц繛");
		userDetail.setAge(26);
		userDetail.setCompany("澶ц繛鏂戦┈绉戞妧");
		userService.addUser(user, userDetail);

	}

	// 文件上传
	@RequestMapping(value = "upload")
    public void uplod(@RequestParam MultipartFile[] uploadFiles) {
    	logger.info("图片上传！");
    	  InputStream in =null;
    	  String outPath="F:/spring-upload.txt";
    	  BufferedInputStream input = null;
          byte buffBytes[] = new byte[1024];
          int allLength = 0;
          OutputStream os = null;
          try {
        	  in=uploadFiles[0].getInputStream();
              input = new BufferedInputStream(in);
              os = new FileOutputStream(outPath);
              int read = 0;
              while ((read = input.read(buffBytes)) != -1) {
                  allLength += read;
                  os.write(buffBytes, 0, read);
              }
              logger.debug("本地图片保存完成!" + "[" + allLength + "]");
          } catch (Exception e) {
              logger.debug("图片本地上传异常！" + e);
              logger.info("图片本地上传异常！" + e);
          } finally {
              try {
                  if (os != null)
                      os.close();
                  logger.info("本地文件上传,out流关闭！");
                  logger.debug("本地文件上传,out流关闭！");
              } catch (IOException e) {
                  logger.info("本地文件上传,out流关闭异常！");
                  logger.debug("本地文件上传,out流关闭异常！");
                  e.printStackTrace();
              }
          }
    	
    	
    }

	// 上传图片页面
	@RequestMapping(value = "uploadPage")
	public ModelAndView uploadPage() {
		logger.info("图片上传！");
		ModelAndView mv = new ModelAndView();
		mv.setViewName("upload");
		return mv;
	}
	
	public static void main(String[] args) {
		String reg="del.*";
		String method="deleteUser";
		System.out.println(Pattern.matches(reg, method));
	}

}

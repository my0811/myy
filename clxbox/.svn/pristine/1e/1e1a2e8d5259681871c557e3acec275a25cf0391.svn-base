<assembly
	xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd">
	<id>zip</id>
	<formats>
		<format>zip</format>
	</formats>
	<!-- true 的话 会在原war包的基础上在增加一层目录 “ META-INF” 在原根目录增加了war名的目录 -->
	<includeBaseDirectory>false</includeBaseDirectory>
	<fileSets>
		<!-- 将 target/classes 下的文件输出到 WEB-INF/classes, 同时排除 target/classes/conf/*.properties -->
		<fileSet>
			<!-- target/classes -->
			<directory>${project.build.outputDirectory}</directory>
			<outputDirectory>${project.build.finalName}/${package.war.class.buildPath}</outputDirectory>
			<!-- 排除依赖环境配置文件 -->
			<excludes>
				<exclude>**/${env.db.path}/*.properties</exclude>
				<exclude>**/${env.prop.path}/**/*.properties</exclude>
			</excludes>
		</fileSet>
		<!-- db 配置文件 -->
		<fileSet>
			<directory>${env.db}</directory>
			<excludes>
				<exclude>**/*.xml</exclude>
			</excludes>
			<outputDirectory>${project.build.finalName}/${env.db.target}</outputDirectory>
		</fileSet>
		<!-- properties 配置文件 -->
		<fileSet>
			<directory>${env.prop}</directory>
			<outputDirectory>${project.build.finalName}/${env.prop.target}</outputDirectory>
		</fileSet>
		<!-- 将 webapp 下的文件输出到 WAR 包 -->
		<fileSet>
			<directory>${project.basedir}/${web.root}</directory>
			<outputDirectory>${project.build.finalName}</outputDirectory>
		</fileSet>
	</fileSets>
	<dependencySets>
		<!-- jar 包依赖copy到lib下 -->
		<dependencySet>
			<useProjectArtifact>false</useProjectArtifact>
			<!-- 将scope为runtime的依赖包打包到lib目录下。只会拷贝到当前目录下的lib下 -->
			<outputDirectory>${project.build.finalName}/${package.war.jar.buildPath}</outputDirectory>
			<scope>runtime</scope>
			<!-- 排除制定的jar -->
			<excludes>
				<!--排除junit 测试jar -->
				<exclude>junit:junit</exclude>
			</excludes>
		</dependencySet>
	</dependencySets>
</assembly>  